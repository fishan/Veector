from model_handler import ModelHandler
import logging

logging.basicConfig(level=logging.DEBUG)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
handler = ModelHandler(
    model_name="DeepSeek-R1-Distill-Qwen-1.5B",
    tensor_dir="/workspaces/Veector/data/blocks/DeepSeek-R1-Distill-Qwen-1.5B",
    vocab_size=151936,
    hidden_size=1536,
    num_layers=28
)

# –ß–∞—Ç
def chat():
    print("\nü§ñ –ß–∞—Ç —Å –±–ª–æ—á–Ω–æ–π –º–æ–¥–µ–ª—å—é –∞–∫—Ç–∏–≤–µ–Ω! –í–≤–µ–¥–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
    while True:
        user_input = input("–¢—ã: ")
        if user_input.lower() == "–≤—ã—Ö–æ–¥":
            print("ü§ñ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")
            handler.clear_memory()
            break

        print("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")
        try:
            input_ids = handler.preprocess_text(user_input)
            generated_ids, confidence = handler.generate(input_ids)  # –ù–∏–∫–∞–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —á–∞—Ç–∞
            response = handler.tokenizer.decode(generated_ids, skip_special_tokens=True)
            print(f"ü§ñ: {response} (Confidence: {confidence:.4f})")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            handler.clear_memory()

if __name__ == "__main__":
    chat()